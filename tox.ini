[testenv]
usedevelop = true
basepython = python3.10

[compile]
envdir = {toxworkdir}/compile
deps =
    pip-tools

[fmt]
envdir = {toxworkdir}/fmt
deps =
    -rrequirements-fmt.txt

[test]
envdir = {toxworkdir}/test
deps =
    -rrequirements-test.txt

[testenv:compile]
envdir = {[compile]envdir}
deps = {[compile]deps}
commands =
    pip-compile -r requirements-fmt.in
    pip-compile -r requirements-test.in

[testenv:black]
envdir = {[fmt]envdir}
deps = {[fmt]deps}
commands =
    {envpython} -m black {posargs:setup.py src tests}

[testenv:black-check]
envdir = {[fmt]envdir}
deps = {[fmt]deps}
commands =
    {envpython} -m black --check {posargs:setup.py src tests}

[testenv:lint]
envdir = {[fmt]envdir}
deps = {[fmt]deps}
commands =
    {envpython} -m flake8 {posargs:setup.py src tests}

[testenv:mypy]
envdir = {[test]envdir}
deps = {[test]deps}
commands = {envpython} -m mypy {posargs:src tests}

[testenv:test]
envdir = {[test]envdir}
deps = {[test]deps}
commands =
    {envpython} -m pytest {posargs}

[testenv:test-cov]
envdir = {[test]envdir}
deps = {[test]deps}
commands =
    {envpython} -m pytest --cov=src --cov-report=term --cov-report=html {posargs}

[testenv:deploy]
envdir = {[compile]envdir}
deps = {[compile]deps}
commands =
    {envpython} setup.py sdist bdist_wheel
    {envpython} -m twine upload dist/*
